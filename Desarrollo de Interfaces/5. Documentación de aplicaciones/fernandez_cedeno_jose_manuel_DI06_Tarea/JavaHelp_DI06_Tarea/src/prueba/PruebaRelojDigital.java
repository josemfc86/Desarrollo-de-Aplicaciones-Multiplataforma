
package prueba;

import java.io.File;
import java.net.URL;
import javax.help.HelpBroker;
import javax.help.HelpSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author JMFC
 */

//Formulario de prueba para el componente Reloj Digital y su alarma.
public class PruebaRelojDigital extends javax.swing.JFrame {

    /**
     * Creates new form PruebaRelojDigital
     */
    public PruebaRelojDigital() {
        initComponents();
        setTitle("Reloj Digital");
        setLocationRelativeTo(null);
        setResizable(false);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        jMenuAyuda.requestFocus();
        ayuda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        relojDigital1 = new componente_reloj_digital.RelojDigital();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuAyuda = new javax.swing.JMenu();
        jMenuItemCreacionComponente = new javax.swing.JMenuItem();
        jMenuItemUsoComponente = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        relojDigital1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        relojDigital1.setAlarmaActiva(true);
        relojDigital1.setAlarmaHora(20);
        relojDigital1.setAlarmaMensaje("Hora del evento.");
        relojDigital1.setAlarmaMinuto(32);
        relojDigital1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        relojDigital1.setFormato24h(true);
        relojDigital1.addAlarmaListener(new componente_reloj_digital.AlarmaListener() {
            public void suenaAlarma(componente_reloj_digital.AlarmaEvent evt) {
                relojDigital1SuenaAlarma(evt);
            }
        });

        jMenuAyuda.setText("Ayuda");
        jMenuAyuda.setFocusPainted(true);

        jMenuItemCreacionComponente.setText("Creación del componente");
        jMenuItemCreacionComponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCreacionComponenteActionPerformed(evt);
            }
        });
        jMenuAyuda.add(jMenuItemCreacionComponente);

        jMenuItemUsoComponente.setText("Uso del componente");
        jMenuAyuda.add(jMenuItemUsoComponente);

        jMenuBar1.add(jMenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addComponent(relojDigital1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(relojDigital1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //En este método proporcionado por la interfaz de nuestro componente, implemento la acción que quiero que realice el componente cuando se dipare el evento.
    private void relojDigital1SuenaAlarma(componente_reloj_digital.AlarmaEvent evt) {//GEN-FIRST:event_relojDigital1SuenaAlarma
            JOptionPane.showMessageDialog(null, relojDigital1.getAlarmaMensaje(), "Alarma",JOptionPane.INFORMATION_MESSAGE);       //Muestro en un JOptionPane el mensaje que me han pasado por la propiedad AlarmaMensaje.    
    }//GEN-LAST:event_relojDigital1SuenaAlarma

    private void jMenuItemCreacionComponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCreacionComponenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemCreacionComponenteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PruebaRelojDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PruebaRelojDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PruebaRelojDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PruebaRelojDigital.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PruebaRelojDigital().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenuAyuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCreacionComponente;
    private javax.swing.JMenuItem jMenuItemUsoComponente;
    private componente_reloj_digital.RelojDigital relojDigital1;
    // End of variables declaration//GEN-END:variables

    public void ayuda() {
        //cargamos el fichero de ayuda hs
        File file = new File("help" + File.separator + "help_set.hs");//ruta
        //variables
        URL hsURL;
        HelpSet helpSet;
        try {
            hsURL = file.toURI().toURL();//conectamos
            helpSet = new HelpSet(getClass().getClassLoader(), hsURL);
            //Crea el helpset y el HelpBroker 
            HelpBroker hb = helpSet.createHelpBroker();
            //pone ayuda a item de menu 
            hb.enableHelpOnButton(jMenuItemCreacionComponente,"CreacionComponente1", helpSet);
            hb.enableHelpOnButton(jMenuItemUsoComponente,"UsoComponente1", helpSet);
            //asociar a cada componente una página que se muestre al pulsar la tecla F1 sobre él.
            hb.enableHelpKey(jMenuItemCreacionComponente,"CreacionComponente1", helpSet);
            hb.enableHelpKey(jMenuItemUsoComponente,"UsoComponente1", helpSet);
            hb.enableHelpKey(jMenuAyuda, "VentanaPrincipal", helpSet);
            //con la siguiente línea de código hacemos que nos muestre la ayuda cuando apretamos f1 en la pantalla en general.         
            hb.enableHelpKey(getRootPane(),"VentanaPrincipal", helpSet);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
